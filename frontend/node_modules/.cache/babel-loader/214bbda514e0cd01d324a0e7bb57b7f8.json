{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinborggio/Desktop/joaquin-borggio-wispr/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport style from \"./App.module.css\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport SingleAudioComponent from \"./SingleAudioComponent.js\";\nimport { LineWave } from \"react-loader-spinner\";\nimport { ReactMic } from 'react-mic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [isRecording, setIsRecording] = useState(false);\n  let [isDoneRecording, setIsDoneRecording] = useState(false);\n  let [isPlaying, setIsPlaying] = useState(false);\n  let [audioFiles, setAudioFiles] = useState([]);\n  let [currAudio, setCurrAudio] = useState(\"\"); // CODE BELOW CAN BE UNCOMMENTED AND FIXED TO ENABLE VISUALIZATION OF THE AUDIO STREAM\n  // var source = new EventSource(\"://127.0.0.1:5000/startRecording\");\n  //   source.addEventListener('publish', function(event) {\n  //       var data = JSON.parse(event.data);\n  //       console.log(\"The server says \" + data.message);\n  //   }, false);\n  //   source.addEventListener('error', function(event) {\n  //       console.log(\"Error\"+ event)\n  //       alert(\"Failed to connect to event stream. Is Redis running?\");\n  //   }, false);\n\n  async function clickedStart() {\n    // set variables\n    setIsRecording(true);\n    setIsDoneRecording(false); // Axios call to start recording\n\n    let audioID = await axios.get(`http://127.0.0.1:5000/startRecording`); // set surrent audio\n\n    setCurrAudio(audioID.data);\n  }\n\n  async function clickedStopRecording() {\n    // set appropriate variables\n    setIsRecording(false);\n    setIsDoneRecording(true); // axios call to stop recording\n\n    let response = await axios.get(`http://127.0.0.1:5000/stopRecording`);\n  }\n\n  async function clickedPlay() {\n    setIsPlaying(true); // Axios call to start playing audio\n\n    let response = await axios.post(`http://127.0.0.1:5000/playAudio`, {\n      id_num: currAudio\n    }, {\n      \"Content-Type\": \"application/json\"\n    });\n    setIsPlaying(false);\n  }\n\n  function clickedClear() {\n    // Adjust variables\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function clickedSave() {\n    // Save currAudio to audioFiles\n    setAudioFiles([currAudio, ...audioFiles]);\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function audioSelect(file_id) {\n    // Move audio file to currAudio\n    setCurrAudio(file_id);\n  }\n\n  function audioDelete(file_id) {\n    // Delete audio file from audioFiles \n    setAudioFiles(audioFiles.filter(elem => {\n      return elem !== file_id;\n    }));\n  }\n\n  async function clickedStopAudio() {\n    // Axios call to stop playing the audio\n    let response = await axios.get(`http://127.0.0.1:5000/stopAudio`);\n    setIsPlaying(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.topSection,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.headerText,\n        children: \"Record Your Audio with Python!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LineWave, {\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.recording,\n          children: \"Recording...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\"\n        },\n        children: currAudio !== \"\" && /*#__PURE__*/_jsxDEV(SingleAudioComponent, {\n          audio_id: currAudio,\n          backColor: \"#7da8b6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this) // </SingleAudioComponent>\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttonSection,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [!isRecording && !isDoneRecording && currAudio === \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStart,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), isRecording && !isDoneRecording && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStopRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedClear,\n          children: \"Clear Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), !isRecording && isDoneRecording && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedSave,\n          children: \"Save Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && !isPlaying && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedPlay,\n          children: \"Play Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && isPlaying && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStopAudio,\n          children: \"Stop Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.listSection,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.listTitle,\n        children: [\"Saved Audio Files (\", audioFiles.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), audioFiles.map(file_id => {\n        return /*#__PURE__*/_jsxDEV(SingleAudioComponent, {\n          audio_id: file_id,\n          backColor: \"#add8e6\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => {\n              audioSelect(file_id);\n            },\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: \"5px\"\n            },\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: () => {\n              audioDelete(file_id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, file_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this);\n      }), audioFiles.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.message,\n        children: \"Click \\\"Start Recording\\\" to record audio. Then, you can \\\"Save Audio\\\" for future reference!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4QrRqEnsnqpdB9N87Z0ARS64hac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joaquinborggio/Desktop/joaquin-borggio-wispr/frontend/src/App.js"],"names":["React","useState","Button","style","Stack","axios","SingleAudioComponent","LineWave","ReactMic","App","isRecording","setIsRecording","isDoneRecording","setIsDoneRecording","isPlaying","setIsPlaying","audioFiles","setAudioFiles","currAudio","setCurrAudio","clickedStart","audioID","get","data","clickedStopRecording","response","clickedPlay","post","id_num","clickedClear","clickedSave","audioSelect","file_id","audioDelete","filter","elem","clickedStopAudio","topSection","headerText","recording","width","buttonSection","listSection","listTitle","length","map","marginLeft","message"],"mappings":"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","sourcesContent":["// import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport style from \"./App.module.css\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport SingleAudioComponent from \"./SingleAudioComponent.js\";\nimport { LineWave } from \"react-loader-spinner\";\nimport { ReactMic } from 'react-mic';\n\n\nfunction App() {\n  let [isRecording, setIsRecording] = useState(false);\n  let [isDoneRecording, setIsDoneRecording] = useState(false);\n  let [isPlaying, setIsPlaying] = useState(false);\n  let [audioFiles, setAudioFiles] = useState([]);\n  let [currAudio, setCurrAudio] = useState(\"\");\n\n  // CODE BELOW CAN BE UNCOMMENTED AND FIXED TO ENABLE VISUALIZATION OF THE AUDIO STREAM\n  // var source = new EventSource(\"://127.0.0.1:5000/startRecording\");\n  //   source.addEventListener('publish', function(event) {\n  //       var data = JSON.parse(event.data);\n  //       console.log(\"The server says \" + data.message);\n  //   }, false);\n  //   source.addEventListener('error', function(event) {\n  //       console.log(\"Error\"+ event)\n  //       alert(\"Failed to connect to event stream. Is Redis running?\");\n  //   }, false);\n\n  async function clickedStart() {\n    // set variables\n    setIsRecording(true);\n    setIsDoneRecording(false);\n\n    // Axios call to start recording\n    let audioID = await axios.get(`http://127.0.0.1:5000/startRecording`);\n\n    // set surrent audio\n    setCurrAudio(audioID.data);\n  }\n\n  async function clickedStopRecording() {\n    // set appropriate variables\n    setIsRecording(false);\n    setIsDoneRecording(true);\n\n    // axios call to stop recording\n    let response = await axios.get(`http://127.0.0.1:5000/stopRecording`);\n  }\n\n  async function clickedPlay() {\n    setIsPlaying(true);\n\n    // Axios call to start playing audio\n    let response = await axios.post(\n      `http://127.0.0.1:5000/playAudio`,\n      { id_num: currAudio },\n      {\n        \"Content-Type\": \"application/json\",\n      }\n    );\n\n    setIsPlaying(false);\n  }\n\n  function clickedClear() {\n    // Adjust variables\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function clickedSave() {\n    // Save currAudio to audioFiles\n    setAudioFiles([currAudio, ...audioFiles]);\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function audioSelect(file_id) {\n    // Move audio file to currAudio\n    setCurrAudio(file_id);\n  }\n\n  function audioDelete(file_id) {\n    // Delete audio file from audioFiles \n    setAudioFiles(\n      audioFiles.filter((elem) => {\n        return elem !== file_id;\n      })\n    );\n  }\n\n  async function clickedStopAudio() {\n    // Axios call to stop playing the audio\n    let response = await axios.get(`http://127.0.0.1:5000/stopAudio`);\n    setIsPlaying(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={style.topSection}>\n        <span className={style.headerText}>Record Your Audio with Python!</span>\n        {/* {isRecording && <div className={style.recording}>Recording...</div>} */}\n        {isRecording && (\n          <div>\n            <LineWave\n              color=\"blue\"\n            ></LineWave>{\" \"}\n            <div className={style.recording}>Recording...</div>\n          </div>\n        )}\n        <div style={{ width: \"80%\" }}>\n          {currAudio !== \"\" && (\n            <SingleAudioComponent audio_id={currAudio} backColor=\"#7da8b6\"/>\n            // </SingleAudioComponent>\n          )}\n        </div>\n      </div>\n\n      {/* Buttons Section */}\n      <div className={style.buttonSection}>\n        <Stack direction=\"row\" spacing={2}>\n          {!isRecording && !isDoneRecording && currAudio===\"\" && (\n            <Button variant=\"contained\" onClick={clickedStart}>\n              Start Recording\n            </Button>\n          )}\n          {isRecording && !isDoneRecording && (\n            <Button variant=\"contained\" onClick={clickedStopRecording}>\n              Stop Recording\n            </Button>\n          )}\n          {currAudio !== \"\" && (\n            <Button variant=\"contained\" onClick={clickedClear}>\n              Clear Audio\n            </Button>\n          )}\n          {!isRecording && isDoneRecording && (\n            <Button variant=\"contained\" onClick={clickedSave}>\n              Save Audio\n            </Button>\n          )}\n          {currAudio !== \"\" && !isPlaying && (\n            <Button variant=\"contained\" onClick={clickedPlay}>\n              Play Audio\n            </Button>\n          )}\n          {currAudio !== \"\" && isPlaying && (\n            <Button variant=\"contained\" onClick={clickedStopAudio}>\n              Stop Audio\n            </Button>\n          )}\n        </Stack>\n      </div>\n\n      {/* List of saved audio files section */}\n      <div className={style.listSection}>\n        <span className={style.listTitle}>\n          Saved Audio Files ({audioFiles.length}):\n        </span>\n        {audioFiles.map((file_id) => {\n          return (\n            <SingleAudioComponent\n              audio_id={file_id}\n              backColor=\"#add8e6\"\n              width=\"100%\"\n              key={file_id}\n            >\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  audioSelect(file_id);\n                }}\n              >\n                Select\n              </Button>\n              <Button\n                style={{ marginLeft: \"5px\" }}\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={() => {\n                  audioDelete(file_id);\n                }}\n              >\n                Delete\n              </Button>\n            </SingleAudioComponent>\n          );\n        })}\n        {audioFiles.length === 0 && (\n          <span className={style.message}>\n            Click \"Start Recording\" to record audio. Then, you can \"Save Audio\"\n            for future reference!\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}