{"ast":null,"code":"var _jsxFileName = \"/Users/joaquinborggio/Desktop/joaquin-borggio-wispr/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\"; // import \"./App.css\";\n\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport style from \"./App.module.css\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport SingleAudioComponent from \"./SingleAudioComponent.js\";\nimport { LineWave } from \"react-loader-spinner\";\nimport { ReactMic } from 'react-mic'; // import { Recorder } from \"react-voice-recorder\";\n// import { Recorder } from \"react-voice-recorder\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [isRecording, setIsRecording] = useState(false);\n  let [isDoneRecording, setIsDoneRecording] = useState(false);\n  let [isPlaying, setIsPlaying] = useState(false);\n  let [audioFiles, setAudioFiles] = useState([]);\n  let [currAudio, setCurrAudio] = useState(\"\"); // let [shouldVisualize, setShouldVisualize] = useState(false);\n  // var source = new EventSource(\"://127.0.0.1:5000/startRecording\");\n  //   source.addEventListener('publish', function(event) {\n  //       var data = JSON.parse(event.data);\n  //       console.log(\"The server says \" + data.message);\n  //   }, false);\n  //   source.addEventListener('error', function(event) {\n  //       console.log(\"Error\"+ event)\n  //       alert(\"Failed to connect to event stream. Is Redis running?\");\n  //   }, false);\n\n  async function clickedStart() {\n    // Axios call to start recording\n    console.log(\"about to call axios\");\n    setIsRecording(true);\n    setIsDoneRecording(false); // setShouldVisualize(true);\n\n    let audioID = await axios.get(`http://127.0.0.1:5000/startRecording`);\n    console.log(\"audio chunks.data: \", audioID.data); // const audioBlob = new Blob(audioChunks.data, { type: \"audio/wav\" });\n    // const audioUrl = URL.createObjectURL(audioBlob);\n\n    setCurrAudio(audioID.data);\n    console.log(\"back\"); // console.log(response)\n  }\n\n  async function clickedStopRecording() {\n    // stop recoding but dont finish\n    console.log(\"about to call axios 2\");\n    setIsRecording(false);\n    setIsDoneRecording(true);\n    let response = await axios.get(`http://127.0.0.1:5000/stopRecording`);\n    console.log(\"back 2\");\n    console.log(response);\n  }\n\n  async function clickedPlay() {\n    console.log(\"about to call axios 3\");\n    setIsPlaying(true); // setIsRecording(true);\n\n    let response = await axios.post(`http://127.0.0.1:5000/playAudio`, {\n      id_num: currAudio\n    }, {\n      \"Content-Type\": \"application/json\"\n    });\n    setIsPlaying(false);\n    console.log(\"back 3\");\n    console.log(response);\n  }\n\n  function clickedClear() {\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function clickedSave() {\n    setAudioFiles([currAudio, ...audioFiles]);\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  } // function test() {\n  //   console.log(\"Printing audio files\")\n  //   console.log(audioFiles)\n  // }\n\n\n  function audioSelect(file_id) {\n    console.log(\"Printing pops\");\n    console.log(file_id);\n    setCurrAudio(file_id);\n  }\n\n  function audioDelete(file_id) {\n    console.log(\"Printing pops\");\n    console.log(file_id);\n    setAudioFiles(audioFiles.filter(elem => {\n      return elem !== file_id;\n    }));\n  }\n\n  async function clickedStopAudio() {\n    // stop recoding but dont finish\n    console.log(\"about to call axios 2\");\n    let response = await axios.get(`http://127.0.0.1:5000/stopAudio`);\n    setIsPlaying(false);\n    console.log(response);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.topSection,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.headerText,\n        children: \"Record Your Audio with Python!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LineWave, {\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.recording,\n          children: \"Recording...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"80%\"\n        },\n        children: currAudio !== \"\" && /*#__PURE__*/_jsxDEV(SingleAudioComponent, {\n          audio_id: currAudio,\n          backColor: \"#7da8b6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttonSection,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [!isRecording && !isDoneRecording && currAudio === \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStart,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), isRecording && !isDoneRecording && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStopRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedClear,\n          children: \"Clear Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), !isRecording && isDoneRecording && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedSave,\n          children: \"Save Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && !isPlaying && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedPlay,\n          children: \"Play Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), currAudio !== \"\" && isPlaying && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: clickedStopAudio,\n          children: \"Stop Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.listSection,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.listTitle,\n        children: [\"Saved Audio Files (\", audioFiles.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), audioFiles.map(file_id => {\n        return /*#__PURE__*/_jsxDEV(SingleAudioComponent, {\n          audio_id: file_id,\n          backColor: \"#add8e6\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => {\n              audioSelect(file_id);\n            },\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: \"5px\"\n            },\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: () => {\n              audioDelete(file_id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, file_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this);\n      }), audioFiles.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.message,\n        children: \"Click \\\"Start Recording\\\" to record audio. Then, you can \\\"Save Audio\\\" for future reference!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4QrRqEnsnqpdB9N87Z0ARS64hac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joaquinborggio/Desktop/joaquin-borggio-wispr/frontend/src/App.js"],"names":["logo","React","useState","Button","style","Stack","axios","SingleAudioComponent","LineWave","ReactMic","App","isRecording","setIsRecording","isDoneRecording","setIsDoneRecording","isPlaying","setIsPlaying","audioFiles","setAudioFiles","currAudio","setCurrAudio","clickedStart","console","log","audioID","get","data","clickedStopRecording","response","clickedPlay","post","id_num","clickedClear","clickedSave","audioSelect","file_id","audioDelete","filter","elem","clickedStopAudio","topSection","headerText","recording","width","buttonSection","listSection","listTitle","length","map","marginLeft","message"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport style from \"./App.module.css\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport SingleAudioComponent from \"./SingleAudioComponent.js\";\nimport { LineWave } from \"react-loader-spinner\";\nimport { ReactMic } from 'react-mic';\n// import { Recorder } from \"react-voice-recorder\";\n\n// import { Recorder } from \"react-voice-recorder\";\n\nfunction App() {\n  let [isRecording, setIsRecording] = useState(false);\n  let [isDoneRecording, setIsDoneRecording] = useState(false);\n  let [isPlaying, setIsPlaying] = useState(false);\n  let [audioFiles, setAudioFiles] = useState([]);\n  let [currAudio, setCurrAudio] = useState(\"\");\n  // let [shouldVisualize, setShouldVisualize] = useState(false);\n\n  // var source = new EventSource(\"://127.0.0.1:5000/startRecording\");\n  //   source.addEventListener('publish', function(event) {\n  //       var data = JSON.parse(event.data);\n  //       console.log(\"The server says \" + data.message);\n  //   }, false);\n  //   source.addEventListener('error', function(event) {\n  //       console.log(\"Error\"+ event)\n  //       alert(\"Failed to connect to event stream. Is Redis running?\");\n  //   }, false);\n\n  async function clickedStart() {\n    // Axios call to start recording\n    console.log(\"about to call axios\");\n    setIsRecording(true);\n    setIsDoneRecording(false);\n    // setShouldVisualize(true);\n    let audioID = await axios.get(`http://127.0.0.1:5000/startRecording`);\n\n    console.log(\"audio chunks.data: \", audioID.data);\n\n    // const audioBlob = new Blob(audioChunks.data, { type: \"audio/wav\" });\n\n    // const audioUrl = URL.createObjectURL(audioBlob);\n    setCurrAudio(audioID.data);\n\n    console.log(\"back\");\n    // console.log(response)\n  }\n\n  async function clickedStopRecording() {\n    // stop recoding but dont finish\n    console.log(\"about to call axios 2\");\n    setIsRecording(false);\n    setIsDoneRecording(true);\n    let response = await axios.get(`http://127.0.0.1:5000/stopRecording`);\n    console.log(\"back 2\");\n    console.log(response);\n  }\n\n  async function clickedPlay() {\n    console.log(\"about to call axios 3\");\n    setIsPlaying(true);\n    // setIsRecording(true);\n    let response = await axios.post(\n      `http://127.0.0.1:5000/playAudio`,\n      { id_num: currAudio },\n      {\n        \"Content-Type\": \"application/json\",\n      }\n    );\n    setIsPlaying(false);\n    console.log(\"back 3\");\n    console.log(response);\n  }\n\n  function clickedClear() {\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  function clickedSave() {\n    setAudioFiles([currAudio, ...audioFiles]);\n    setCurrAudio(\"\");\n    setIsRecording(false);\n    setIsDoneRecording(false);\n  }\n\n  // function test() {\n  //   console.log(\"Printing audio files\")\n  //   console.log(audioFiles)\n  // }\n\n  function audioSelect(file_id) {\n    console.log(\"Printing pops\");\n    console.log(file_id);\n    setCurrAudio(file_id);\n  }\n\n  function audioDelete(file_id) {\n    console.log(\"Printing pops\");\n    console.log(file_id);\n    setAudioFiles(\n      audioFiles.filter((elem) => {\n        return elem !== file_id;\n      })\n    );\n  }\n\n  async function clickedStopAudio() {\n    // stop recoding but dont finish\n    console.log(\"about to call axios 2\");\n    let response = await axios.get(`http://127.0.0.1:5000/stopAudio`);\n    setIsPlaying(false);\n    console.log(response);\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload. Hi Boolio\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <div className={style.topSection}>\n        <span className={style.headerText}>Record Your Audio with Python!</span>\n        {/* {isRecording && <div className={style.recording}>Recording...</div>} */}\n        {isRecording && (\n          <div>\n            <LineWave\n              color=\"blue\"\n            ></LineWave>{\" \"}\n            <div className={style.recording}>Recording...</div>\n          </div>\n        )}\n        {/* <div>{currAudio}</div> */}\n        <div style={{ width: \"80%\" }}>\n          {currAudio !== \"\" && (\n            <SingleAudioComponent audio_id={currAudio} backColor=\"#7da8b6\">\n              {/* <Button variant=\"outlined\" onClick={() => {audioSelect(file_id)}}>\n              Select\n            </Button>\n            <Button style={{marginLeft: \"5px\"}} variant=\"outlined\" color=\"error\" onClick={() => {audioDelete(file_id)}}>\n              Delete\n            </Button> */}\n            </SingleAudioComponent>\n          )}\n        </div>\n      </div>\n      <div className={style.buttonSection}>\n        <Stack direction=\"row\" spacing={2}>\n          {!isRecording && !isDoneRecording && currAudio===\"\" && (\n            <Button variant=\"contained\" onClick={clickedStart}>\n              Start Recording\n            </Button>\n          )}\n          {isRecording && !isDoneRecording && (\n            <Button variant=\"contained\" onClick={clickedStopRecording}>\n              Stop Recording\n            </Button>\n          )}\n          {currAudio !== \"\" && (\n            <Button variant=\"contained\" onClick={clickedClear}>\n              Clear Audio\n            </Button>\n          )}\n          {!isRecording && isDoneRecording && (\n            <Button variant=\"contained\" onClick={clickedSave}>\n              Save Audio\n            </Button>\n          )}\n          {currAudio !== \"\" && !isPlaying && (\n            <Button variant=\"contained\" onClick={clickedPlay}>\n              Play Audio\n            </Button>\n          )}\n          {currAudio !== \"\" && isPlaying && (\n            <Button variant=\"contained\" onClick={clickedStopAudio}>\n              Stop Audio\n            </Button>\n          )}\n          {/* <Button variant=\"contained\" onClick={test}>\n              See audio files\n            </Button> */}\n        </Stack>\n      </div>\n      <div className={style.listSection}>\n        <span className={style.listTitle}>\n          Saved Audio Files ({audioFiles.length}):\n        </span>\n        {/* {audioFiles.length !== 0 &&  */}\n        {audioFiles.map((file_id) => {\n          return (\n            <SingleAudioComponent\n              audio_id={file_id}\n              backColor=\"#add8e6\"\n              width=\"100%\"\n              key={file_id}\n            >\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  audioSelect(file_id);\n                }}\n              >\n                Select\n              </Button>\n              <Button\n                style={{ marginLeft: \"5px\" }}\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={() => {\n                  audioDelete(file_id);\n                }}\n              >\n                Delete\n              </Button>\n            </SingleAudioComponent>\n          );\n        })}\n        {audioFiles.length === 0 && (\n          <span className={style.message}>\n            Click \"Start Recording\" to record audio. Then, you can \"Save Audio\"\n            for future reference!\n          </span>\n        )}\n        {/* } */}\n      </div>\n      {/* {isRecording === true &&  \n      <ReactMic\n          record={isRecording}\n          className=\"sound-wave\"\n          onStop={()=>{console.log(\"done i guess\")}}\n          // onData={this.onData}\n          strokeColor=\"#000000\"\n          backgroundColor=\"#FF4081\" />} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}